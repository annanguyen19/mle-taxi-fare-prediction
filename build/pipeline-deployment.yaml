# Copyright 2021 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#            http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#############################################################################
# CI/CD steps for Cloud Build to tests and deploy a TFX pipeline to Vertex AI.
#############################################################################

steps:
  - name: "gcr.io/cloud-builders/git"
    args:
      [
        "clone",
        "--single-branch",
        "--branch",
        "$_BRANCH_NAME",
        "$_REPO_GIT",
        "--depth",
        "1",
        "--verbose",
      ]
    id: "Clone Repository"


  # Run model unit tests.
  - name: 'us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest'
    entrypoint: 'pytest'
    args: [ '-s', 'src/tests/model_tests.py' ]
    dir: "mle-taxi-fare-prediction"
    id: 'Unit Test Model'
    waitFor: ["Clone Repository"]
    timeout: 1800s
    # Build the image that encapsulates the pipeline.
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/$_TFX_IMAGE:${SHORT_SHA}",
        ".",
      ]
    dir: "mle-taxi-fare-prediction"
    id: "Build TFX Image"
    waitFor: [Unit Test Model']

  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest",
        "build/.",
      ]
    dir: "mle-taxi-fare-prediction"
    id: "Build cicd image"
    waitFor: ["Build TFX Image"]
    
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "src/pipeline/trainer_transform.py",
        "gs://$PROJECT_ID/pipeline_module/$_PIPELINE_NAME/trainer_transform.py",
      ]
    dir: "mle-taxi-fare-prediction"
    id: "Upload transform to GCS"
    waitFor: ["Build cicd image"]
  # push to registry tuner
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "src/pipeline/trainer_tune.py",
        "gs://$PROJECT_ID/pipeline_module/$_PIPELINE_NAME/trainer_tune.py",
      ]
    dir: "mle-taxi-fare-prediction"
    id: "Upload tuner to GCS"
    waitFor: ["Upload transform to GCS"]

  # push to registry vertex
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "src/pipeline/trainer_vertex.py",
        "gs://$PROJECT_ID/pipeline_module/$_PIPELINE_NAME/trainer_vertex.py",
      ]
    dir: "mle-taxi-fare-prediction"
    id: "Upload vertex to GCS"
    waitFor: ["Upload tuner to GCS"]

  # build cicd image

#    waitFor: ["Upload vertex to GCS"]

  # Compile the pipeline.
  - name: "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest"
    entrypoint: "python"
    args:
      [
        "build/utils.py",
        "--mode",
        "compile-pipeline",
        "--pipeline-name",
        "$_PIPELINE_NAME",
      ]
    # dir: "mle-taxi-fare-prediction"
    env:
      - "PROJECT=$PROJECT_ID"
      - "REGION=us-central1"
      - "GCS_LOCATION=gs://$PROJECT_ID"
    dir: "mle-taxi-fare-prediction"
    id: "Compile Pipeline"
    #  waitFor: ['Local Test E2E Pipeline']
    waitFor: ["Upload vertex to GCS"]

  # Upload compiled pipeline to GCS.
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "./chicago-vertex-pipelines_pipeline.json",
        "gs://$PROJECT_ID/pipeline_root/$_PIPELINE_NAME/$_PIPELINE_NAME.json",
      ]
    dir: "mle-taxi-fare-prediction"
    id: "Upload Pipeline to GCS"
    waitFor: ["Compile Pipeline"]

  # Run pipeline in VertexAI.
  - name: "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest"
    entrypoint: "python"
    args:
      [
        "build/utils.py",
        "--mode",
        "run-pipeline",
        "--pipeline-name",
        "$_PIPELINE_NAME",
      ]
    dir: "mle-taxi-fare-prediction"
    env:
      - "PROJECT=$PROJECT_ID"
      - "REGION=us-central1"
      - "GCS_LOCATION=gs://$PROJECT_ID"
    id: "Run Pipeline"
    waitFor: ["Upload Pipeline to GCS"]
# Push TFX Image to Container Registy.
images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/$_TFX_IMAGE:${SHORT_SHA}'
timeout: 4880s
